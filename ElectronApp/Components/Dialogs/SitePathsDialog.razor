@using Benjis_Shop_Toolbox.Services
@using ElectronNET.API.Entities

<MudDialog MaxWidth="MaxWidth.Small" FullWidth="true">
    <DialogContent>
        <MudText Typo="Typo.h6" Class="mb-4">Shop Pfade bearbeiten</MudText>
        <MudTextField @bind-Value="_yamlPath" Label="shop.yaml" Variant="Variant.Filled" Class="mb-2"
                      Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.FolderOpen" OnAdornmentClick="ChooseYaml" />
        <MudTextField @bind-Value="_themePath" Label="Themes Ordner" Variant="Variant.Filled" Class="mb-2"
                      Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.FolderOpen" OnAdornmentClick="ChooseTheme" />
        <MudTextField @bind-Value="_extensionPath" Label="Extensions Ordner" Variant="Variant.Filled" Class="mb-2"
                      Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.FolderOpen" OnAdornmentClick="ChooseExtension" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Save">Speichern</MudButton>
        <MudButton Color="Color.Default" OnClick="Cancel">Abbrechen</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public string SiteName { get; set; } = string.Empty;

    [Inject] SettingsService SettingsService { get; set; } = default!;
    [Inject] FileDialogService FileDialog { get; set; } = default!;

    private string _yamlPath = string.Empty;
    private string _themePath = string.Empty;
    private string _extensionPath = string.Empty;

    protected override void OnInitialized()
    {
        var setting = SettingsService.Settings.SiteSettings.FirstOrDefault(s => s.Name == SiteName);
        if (setting != null)
        {
            _yamlPath = setting.ShopYamlPath ?? string.Empty;
            _themePath = setting.ShopThemesPath ?? string.Empty;
            _extensionPath = setting.ShopExtensionsPath ?? string.Empty;
        }
    }

    private void ChooseYaml()
    {
        var filters = new FileFilter[] { new FileFilter { Name = "YAML", Extensions = new[] { "yaml", "yml" } } };
        var path = FileDialog.OpenFile("shop.yaml auswählen", filters, Path.GetDirectoryName(_yamlPath) ?? string.Empty);
        if (!string.IsNullOrEmpty(path))
        {
            _yamlPath = path;
        }
    }

    private void ChooseTheme()
    {
        var path = FileDialog.OpenFolder("Themes Ordner auswählen", _themePath);
        if (!string.IsNullOrEmpty(path))
        {
            _themePath = path;
        }
    }

    private void ChooseExtension()
    {
        var path = FileDialog.OpenFolder("Extensions Ordner auswählen", _extensionPath);
        if (!string.IsNullOrEmpty(path))
        {
            _extensionPath = path;
        }
    }

    private void Save()
    {
        var setting = SettingsService.Settings.SiteSettings.FirstOrDefault(s => s.Name == SiteName);
        if (setting != null)
        {
            setting.ShopYamlPath = _yamlPath;
            setting.ShopThemesPath = _themePath;
            setting.ShopExtensionsPath = _extensionPath;
            SettingsService.Save();
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog.Cancel();
}
