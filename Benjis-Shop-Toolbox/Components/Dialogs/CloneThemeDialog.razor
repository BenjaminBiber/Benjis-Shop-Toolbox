@using System.IO
@inject ThemeLinkService ThemeService
@inject ISnackbar Snackbar
<MudDialog MaxWidth="MaxWidth.Small" FullWidth="true">
    <DialogContent>
        <MudText Typo="Typo.h6" Class="mb-4">Repository klonen</MudText>
        <MudTextField @bind-Value="_gitUrl" Label="Git URL" Variant="Variant.Filled" Class="mb-2" />
        <MudCheckBox @bind-Value="_linkAfterClone" Color="Color.Primary" Label="Als Symlink hinzufÃ¼gen und in shop.yaml eintragen" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Clone">Klonen</MudButton>
        <MudButton Color="Color.Default" OnClick="Cancel">Abbrechen</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    private string _gitUrl = string.Empty;
    private bool _linkAfterClone;

    private async Task Clone()
    {
        if (!string.IsNullOrWhiteSpace(_gitUrl))
        {
            var success = await ThemeService.CloneRepositoryAsync(_gitUrl);
            if (success && _linkAfterClone)
            {
                var repoName = Path.GetFileNameWithoutExtension(_gitUrl.TrimEnd('/')
                    .Split('/').Last());
                ThemeService.LinkAndOverwrite(repoName);
            }

            if (!success)
            {
                Snackbar.Add("Klonen fehlgeschlagen", Severity.Error);
                MudDialog.Close(DialogResult.Ok(false));
                return;
            }
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog.Cancel();
}
